import { familyDatabaseID } from '../databases/mongo_family';
import { getMongoID } from '../../../helper/crypto';

export const questions = [
    {
        _id: getMongoID(),
        question: 'Определить, кто из членов семьи и сколько потратил в 2005 году',
        database: familyDatabaseID,
        answer: `select FStatus, sum(price*HowMany) as summary from Family, Payments where ID_S=Who and Year(PDate)='2005' group by FStatus`,
        fields: ['fstatus', 'summary[alias]'],
        weight: 0.35,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: 'Узнать, кто старше всех в семьe',
        database: familyDatabaseID,
        answer: `select TOP 1 PersName from Family where datediff(Year, select min(YBorn) from Family)`,
        fields: ['persname'],
        weight: 0.3,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить, кто из членов семьи покупал картошку ('картошка')`,
        database: familyDatabaseID,
        answer: `select FStatus from Goods, Family, Payments where ID_S=Who and Id_G=Good and Gname="Картошка" group by FStatus`,
        fields: ['fstatus'],
        weight: 0.25,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Сколько и кто из семьи потратил на развлечения. Вывести статус в семье, имя, сумму`,
        database: familyDatabaseID,
        answer: `select FStatus, PersName, sum(price*HowMany) as summary from Family, Goods, Payments, GoodTypes where  ID_S=Who and ID_G=Good and ID_GT=GType and GTName="Развлечения" group by FStatus, PersName`,
        fields: ['fstatus', 'persname', 'summary[alias]'],
        weight: 0.25,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить те товары (услуги) за которые платили разные члены семьи (например, отец и мать)`,
        database: familyDatabaseID,
        answer: `select gname from (select distinct who, gname from payments, goods where id_g=good) group by gname having count(*) > 1`,
        fields: ['gname'],
        weight: 0.5,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Найти имя матери`,
        database: familyDatabaseID,
        answer: `select PersName from Family where FStatus="Мать"`,
        fields: ['persname'],
        weight: 0.1,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить какой самый дорогой деликатесный товар был куплен`,
        database: familyDatabaseID,
        answer: `select GName, price from Payments, Goods where Id_G=Good and price = (select max(price) from Payments, Goods, GoodTypes where Id_G=Good and ID_GT=GType and GTName="Деликатесы")`,
        fields: ['gname', 'price'],
        weight: 0.3,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить, кто из членов семьи больше всех потратил в июне 2005`,
        database: familyDatabaseID,
        answer: `select Fstatus, sum(price*HowMany) as summary from Family, Payments where Id_S=Who and Year(PDate) = '2005' and Month(PDate)=6`,
        fields: ['fstatus', 'summary[alias]'],
        weight: 0.25,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить, какие товары (услуги) имеются в таблице Goods, но не покупались в течение 2005 года`,
        database: familyDatabaseID,
        answer: `select GName from Goods where ID_G NOT IN (Select Good from Payments where Year(PDate) = 2005)`,
        fields: ['gname'],
        weight: 0.25,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить группы товаров (услуг), которые не приобретались в 2005 году`,
        database: familyDatabaseID,
        answer: `select GTName from GoodTypes as NotG where not exists (select distinct GTName from Payments, Goods, GoodTypes where ID_G=Good and Year(Pdate)=2005 and ID_GT=GType and GTName=NotG.GTName)`,
        fields: ['gname'],
        weight: 0.3,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Узнать, сколько потрачено на каждую из групп товаров в 2005 году. Вывести название группы и сумму`,
        database: familyDatabaseID,
        answer: `select GTName, sum(price*HowMany) as summary from Payments, Goods, GoodTypes where ID_G=Good and ID_GT=GType and Year(PDate)=2005 group by GTName`,
        fields: ['gname', 'summary[alias]'],
        weight: 0.3,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: `Определить по сколько раз покупали картошку разные члены семьи`,
        database: familyDatabaseID,
        answer: `select count(Good) as count_g, FStatus from Family, Payments, Goods where ID_S=Who and ID_G=Good and GName="Картошка" group by FStatus`,
        fields: ['fstatus', 'count_g[alias]'],
        weight: 0.3,
        active: true,
        open: true,
    },
    {
        _id: getMongoID(),
        question: 'Определить, сколько покупок совершалось членами семьи по каждому виду продукции (услуг)',
        database: familyDatabaseID,
        answer: `select count(Good) as count_g, GName from Payments, Family, Goods  where ID_S=Who and ID_G=Good group by GName order by count(Good) desc`,
        fields: ['count_g[alias]', 'gname'],
        weight: 0.45,
        active: true,
        open: true,
        checkSorting: true,
    },
];

// fixtures.clearAndLoad(
//     {
//         questions,
//     },
//     err => {
//         if (!err) return console.log('Family questions successfully created');
//         throw new Error(err);
//     },
// );

// export default questions;
